// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task_service.proto

package task

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Done                 bool     `protobuf:"varint,3,opt,name=Done,proto3" json:"Done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_b256a733fb46de0c, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type Tasks struct {
	Tasks                []*Task  `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tasks) Reset()         { *m = Tasks{} }
func (m *Tasks) String() string { return proto.CompactTextString(m) }
func (*Tasks) ProtoMessage()    {}
func (*Tasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_b256a733fb46de0c, []int{1}
}

func (m *Tasks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tasks.Unmarshal(m, b)
}
func (m *Tasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tasks.Marshal(b, m, deterministic)
}
func (m *Tasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tasks.Merge(m, src)
}
func (m *Tasks) XXX_Size() int {
	return xxx_messageInfo_Tasks.Size(m)
}
func (m *Tasks) XXX_DiscardUnknown() {
	xxx_messageInfo_Tasks.DiscardUnknown(m)
}

var xxx_messageInfo_Tasks proto.InternalMessageInfo

func (m *Tasks) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type GetTaskRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b256a733fb46de0c, []int{2}
}

func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(m, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PostTaskRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostTaskRequest) Reset()         { *m = PostTaskRequest{} }
func (m *PostTaskRequest) String() string { return proto.CompactTextString(m) }
func (*PostTaskRequest) ProtoMessage()    {}
func (*PostTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b256a733fb46de0c, []int{3}
}

func (m *PostTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostTaskRequest.Unmarshal(m, b)
}
func (m *PostTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostTaskRequest.Marshal(b, m, deterministic)
}
func (m *PostTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostTaskRequest.Merge(m, src)
}
func (m *PostTaskRequest) XXX_Size() int {
	return xxx_messageInfo_PostTaskRequest.Size(m)
}
func (m *PostTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostTaskRequest proto.InternalMessageInfo

func (m *PostTaskRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PutTaskRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Done                 bool     `protobuf:"varint,2,opt,name=Done,proto3" json:"Done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutTaskRequest) Reset()         { *m = PutTaskRequest{} }
func (m *PutTaskRequest) String() string { return proto.CompactTextString(m) }
func (*PutTaskRequest) ProtoMessage()    {}
func (*PutTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b256a733fb46de0c, []int{4}
}

func (m *PutTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutTaskRequest.Unmarshal(m, b)
}
func (m *PutTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutTaskRequest.Marshal(b, m, deterministic)
}
func (m *PutTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutTaskRequest.Merge(m, src)
}
func (m *PutTaskRequest) XXX_Size() int {
	return xxx_messageInfo_PutTaskRequest.Size(m)
}
func (m *PutTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutTaskRequest proto.InternalMessageInfo

func (m *PutTaskRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PutTaskRequest) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type DeleteTaskRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskRequest) Reset()         { *m = DeleteTaskRequest{} }
func (m *DeleteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskRequest) ProtoMessage()    {}
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b256a733fb46de0c, []int{5}
}

func (m *DeleteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskRequest.Unmarshal(m, b)
}
func (m *DeleteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskRequest.Merge(m, src)
}
func (m *DeleteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskRequest.Size(m)
}
func (m *DeleteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskRequest proto.InternalMessageInfo

func (m *DeleteTaskRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Task)(nil), "task.Task")
	proto.RegisterType((*Tasks)(nil), "task.Tasks")
	proto.RegisterType((*GetTaskRequest)(nil), "task.GetTaskRequest")
	proto.RegisterType((*PostTaskRequest)(nil), "task.PostTaskRequest")
	proto.RegisterType((*PutTaskRequest)(nil), "task.PutTaskRequest")
	proto.RegisterType((*DeleteTaskRequest)(nil), "task.DeleteTaskRequest")
}

func init() {
	proto.RegisterFile("task_service.proto", fileDescriptor_b256a733fb46de0c)
}

var fileDescriptor_b256a733fb46de0c = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xdd, 0x24, 0xd5, 0xf4, 0x05, 0x22, 0x0e, 0x8a, 0xc1, 0xd3, 0xb2, 0x22, 0xc4, 0x4b,
	0x94, 0xda, 0xb3, 0xa7, 0x82, 0xf4, 0x22, 0x25, 0x7a, 0x97, 0x68, 0xe7, 0x20, 0x55, 0xa3, 0xdd,
	0xad, 0x1f, 0xd5, 0xcf, 0x23, 0xbb, 0xdb, 0x98, 0x3f, 0xa2, 0xb7, 0xc9, 0xbc, 0x79, 0x33, 0xef,
	0x97, 0x05, 0x99, 0x4a, 0xaf, 0x1e, 0x34, 0xaf, 0x3f, 0x9f, 0x9f, 0xb8, 0x78, 0x5f, 0xd7, 0xa6,
	0xa6, 0xc8, 0xf6, 0xd4, 0x35, 0xa2, 0xfb, 0x4a, 0xaf, 0x28, 0x45, 0x30, 0x5f, 0x66, 0x42, 0x8a,
	0x3c, 0x2c, 0x83, 0xf9, 0x92, 0x08, 0xd1, 0x6d, 0xf5, 0xca, 0x59, 0x20, 0x45, 0x3e, 0x2e, 0x5d,
	0x6d, 0x7b, 0xb3, 0xfa, 0x8d, 0xb3, 0x50, 0x8a, 0x3c, 0x2e, 0x5d, 0xad, 0xce, 0x31, 0xb2, 0x7e,
	0x4d, 0x12, 0x23, 0xbb, 0x50, 0x67, 0x42, 0x86, 0x79, 0x32, 0x41, 0x61, 0xbf, 0x0a, 0xab, 0x95,
	0x5e, 0x50, 0x12, 0xe9, 0x0d, 0x1b, 0xd7, 0xe1, 0x8f, 0x0d, 0x6b, 0xd3, 0x39, 0x3a, 0xb6, 0x47,
	0xd5, 0x19, 0xf6, 0x17, 0xb5, 0xee, 0x8d, 0x34, 0x39, 0x44, 0x9b, 0x43, 0x4d, 0x91, 0x2e, 0x36,
	0x7f, 0x2c, 0xfa, 0x49, 0xef, 0x92, 0x06, 0x9d, 0xa4, 0xa7, 0x38, 0x98, 0xf1, 0x0b, 0x1b, 0xfe,
	0xc7, 0x38, 0xf9, 0x12, 0x48, 0xac, 0x7e, 0xe7, 0x7f, 0x15, 0x5d, 0x20, 0xde, 0x66, 0xd6, 0x74,
	0xe8, 0x91, 0xfa, 0x0c, 0x27, 0x49, 0x0b, 0xaa, 0xd5, 0x0e, 0x5d, 0x22, 0x6e, 0x10, 0xe8, 0xc8,
	0x4b, 0x03, 0xa4, 0xa1, 0xa3, 0xc0, 0xde, 0x96, 0xa6, 0xb9, 0xd0, 0x87, 0x1b, 0xce, 0x4f, 0x81,
	0x96, 0x83, 0x8e, 0xbd, 0xf8, 0x8b, 0x6c, 0xe0, 0x7a, 0xdc, 0x75, 0x8f, 0x7e, 0xf5, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0xad, 0xfa, 0xe1, 0x93, 0x0a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	GetTasks(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Tasks, error)
	PostTask(ctx context.Context, in *PostTaskRequest, opts ...grpc.CallOption) (*Tasks, error)
	PutTask(ctx context.Context, in *PutTaskRequest, opts ...grpc.CallOption) (*Tasks, error)
	DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*Tasks, error)
}

type taskServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTaskServiceClient(cc grpc.ClientConnInterface) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) GetTasks(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := c.cc.Invoke(ctx, "/task.TaskService/GetTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) PostTask(ctx context.Context, in *PostTaskRequest, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := c.cc.Invoke(ctx, "/task.TaskService/PostTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) PutTask(ctx context.Context, in *PutTaskRequest, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := c.cc.Invoke(ctx, "/task.TaskService/PutTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := c.cc.Invoke(ctx, "/task.TaskService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	GetTasks(context.Context, *GetTaskRequest) (*Tasks, error)
	PostTask(context.Context, *PostTaskRequest) (*Tasks, error)
	PutTask(context.Context, *PutTaskRequest) (*Tasks, error)
	DeleteTask(context.Context, *DeleteTaskRequest) (*Tasks, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) GetTasks(ctx context.Context, req *GetTaskRequest) (*Tasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTasks not implemented")
}
func (*UnimplementedTaskServiceServer) PostTask(ctx context.Context, req *PostTaskRequest) (*Tasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTask not implemented")
}
func (*UnimplementedTaskServiceServer) PutTask(ctx context.Context, req *PutTaskRequest) (*Tasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutTask not implemented")
}
func (*UnimplementedTaskServiceServer) DeleteTask(ctx context.Context, req *DeleteTaskRequest) (*Tasks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_GetTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/GetTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTasks(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_PostTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).PostTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/PostTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).PostTask(ctx, req.(*PostTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_PutTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).PutTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/PutTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).PutTask(ctx, req.(*PutTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).DeleteTask(ctx, req.(*DeleteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTasks",
			Handler:    _TaskService_GetTasks_Handler,
		},
		{
			MethodName: "PostTask",
			Handler:    _TaskService_PostTask_Handler,
		},
		{
			MethodName: "PutTask",
			Handler:    _TaskService_PutTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _TaskService_DeleteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task_service.proto",
}
